{"version":3,"sources":["Avatar.js","PersonalInfo.js","SocialMedia.js","App.js","registerServiceWorker.js","index.js"],"names":["withStyles","row","display","justifyContent","avatar","margin","bigAvatar","width","height","props","classes","react_default","a","createElement","className","Avatar_default","alt","src","classNames","PersonalInfo","Component","theme","button","spacing","unit","IconButton_default","href","target","aria-hidden","App","src_Avatar","src_PersonalInfo","src_SocialMedia","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.de74f21d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from 'material-ui/styles';\nimport Avatar from 'material-ui/Avatar';\n\nconst styles = {\n  row: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  avatar: {\n    margin: 10,\n  },\n  bigAvatar: {\n    width: 150,\n    height: 150,\n  },\n};\n\nfunction ImageAvatars(props) {\n  const { classes } = props;\n  return (\n    <div className={classes.row}>\n      <Avatar\n        alt=\"Swar Shah\"\n        src=\"avatar.png\"\n        className={classNames(classes.avatar, classes.bigAvatar)}\n      />\n    </div>\n  );\n}\n\nImageAvatars.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ImageAvatars);\n","import React, { Component } from 'react';\n\nclass PersonalInfo extends Component {\n  render() {\n    return (\n      <div>\n        <span className=\"name\">Swar Shah</span>\n        <h5 className=\"title\">Software Developer in Canada</h5>\n      </div>\n    );\n  }\n}\n\nexport default PersonalInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from 'material-ui/styles';\nimport IconButton from 'material-ui/IconButton';\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n  },\n});\n\nfunction SocialMedia(props) {\n  const { classes } = props;\n  return (\n    <div>\n      <IconButton href=\"https://github.com/SwarShah\" target=\"_blank\" className={classes.button}>\n        <i className=\"fa fa-github\" aria-hidden=\"true\"></i>\n      </IconButton>\n      <IconButton href=\"https://twitter.com/swarshah_\" target=\"_blank\" className={classes.button}>\n        <i className=\"fa fa-twitter\" aria-hidden=\"true\"></i>\n      </IconButton>\n      <IconButton href=\"https://www.facebook.com/swarMshah\" target=\"_blank\" className={classes.button}>\n        <i className=\"fa fa-facebook\" aria-hidden=\"true\"></i>\n      </IconButton>\n      <IconButton href=\"https://www.instagram.com/swarshah_\" target=\"_blank\" className={classes.button}>\n        <i className=\"fa fa-instagram\" aria-hidden=\"true\"></i>\n      </IconButton>\n      <IconButton href=\"https://ca.linkedin.com/in/swarshah12\" target=\"_blank\" className={classes.button}>\n        <i className=\"fa fa-linkedin\" aria-hidden=\"true\"></i>\n      </IconButton>\n    </div>\n  );\n}\n\nSocialMedia.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SocialMedia);\n","import React, { Component } from 'react';\nimport './App.css';\nimport Avatar from './Avatar';\nimport PersonalInfo from './PersonalInfo';\nimport SocialMedia from './SocialMedia';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Avatar />\n        <PersonalInfo />\n        <SocialMedia />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}